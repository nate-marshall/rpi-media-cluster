apiVersion: v1
kind: Service
metadata:
  name: heimdall-service
  namespace: media
spec:
  externalTrafficPolicy: Local
  ports:
  - name: "81"
    port: 81
    protocol: TCP
  selector:
    app: heimdall
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: overseerr-service
  namespace: media
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.1.185
  ports:
  - name: "5055"
    port: 5055
    protocol: TCP
  selector:
    app: overseerr
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: radarr-service
  namespace: media
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.1.178
  ports:
  - name: "7878"
    port: 7878
    protocol: TCP
  selector:
    app: radarr
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr-service
  namespace: media
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.1.189
  ports:
  - name: "8989"
    port: 8989
    protocol: TCP
  selector:
    app: sonarr
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
    volume.kubernetes.io/selected-node: raspberrypi-2
  name: heimdall-config-pvc
  namespace: media
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
    volume.kubernetes.io/selected-node: nuc01
  name: overseerr-config-pvc
  namespace: media
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
    volume.kubernetes.io/selected-node: raspberrypi-3
  name: radarr-config-pvc
  namespace: media
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
    volume.kubernetes.io/selected-node: raspberrypi-2
  name: sonar-config-pvc
  namespace: media
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: heimdall
  name: heimdall-deployment
  namespace: media
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: heimdall
  template:
    metadata:
      labels:
        app: heimdall
    spec:
      containers:
      - env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: America/Chicago
        image: linuxserver/heimdall:arm32v7-latest
        imagePullPolicy: Always
        name: heimdall
        ports:
        - containerPort: 81
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        volumeMounts:
        - mountPath: /config
          name: heimdall-config
      volumes:
      - name: heimdall-config
        persistentVolumeClaim:
          claimName: heimdall-config-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: overseerr
  name: overseerr-deployment
  namespace: media
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: overseerr
  template:
    metadata:
      labels:
        app: overseerr
    spec:
      containers:
      - env:
        - name: LOG_LEVEL
          value: info
        - name: TZ
          value: America/Chicago
        image: sctx/overseerr:latest
        imagePullPolicy: Always
        name: overseerr
        ports:
        - containerPort: 5055
        resources:
          limits:
            cpu: 500m
            memory: 750Mi
        volumeMounts:
        - mountPath: /app/config
          name: overseerr-config
        - mountPath: /nfs
          name: nfs-volume
      volumes:
      - name: nfs-volume
        nfs:
          path: /media/nate/Media12TB
          server: 192.168.1.60
      - name: overseerr-config
        persistentVolumeClaim:
          claimName: overseerr-config-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: radarr
  name: radarr-deployment
  namespace: media
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
      - image: linuxserver/radarr
        imagePullPolicy: Always
        name: radarr
        ports:
        - containerPort: 7878
        resources:
          limits:
            cpu: 500m
            memory: 750Mi
        volumeMounts:
        - mountPath: /config
          name: radarr-config
        - mountPath: /nfs/media/movies
          name: nfs-movies
        - mountPath: /nfs/media/familymovies
          name: nfs-familymovies
        - mountPath: /nfs/downloads
          name: nfs-downloads
      volumes:
      - name: nfs-movies
        nfs:
          path: /media/nate/Media12TB/media/movies
          server: 192.168.1.60
      - name: nfs-familymovies
        nfs:
          path: /media/nate/Media12TB/media/familymovies
          server: 192.168.1.60
      - name: nfs-downloads
        nfs:
          path: /media/nate/Media12TB/downloads
          server: 192.168.1.60
      - name: radarr-config
        persistentVolumeClaim:
          claimName: radarr-config-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarr
  name: sonarr-deployment
  namespace: media
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - image: linuxserver/sonarr
        imagePullPolicy: Always
        name: sonarr
        ports:
        - containerPort: 8989
        resources:
          limits:
            cpu: 500m
            memory: 750Mi
        volumeMounts:
        - mountPath: /config
          name: sonarr-config
        - mountPath: /nfs/media/familytv
          name: nfs-familytv
        - mountPath: /nfs/downloads
          name: nfs-downloads
      volumes:
      - name: nfs-familytv
        nfs:
          path: /media/nate/MediaFiles/media/familytv
          server: 192.168.1.60
      - name: nfs-downloads
        nfs:
          path: /media/nate/MediaFiles/downloads
          server: 192.168.1.60
      - name: sonarr-config
        persistentVolumeClaim:
          claimName: sonar-config-pvc
