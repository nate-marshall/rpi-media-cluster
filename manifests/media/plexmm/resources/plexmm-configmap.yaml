kind: ConfigMap
apiVersion: v1
metadata:
  name: plexmm-config
  namespace: media
data:
  config.yaml: |-
    settings: # Can be individually specified per library as well
    cache: true
    cache_expiration: 60
    asset_directory: config/assets
    asset_folders: true
    asset_depth: 0
    create_asset_folders: false
    dimensional_asset_rename: false
    download_url_assets: false
    show_missing_season_assets: false
    sync_mode: append
    minimum_items: 1
    default_collection_order:
    delete_below_minimum: true
    delete_not_scheduled: false
    run_again_delay: 2
    missing_only_released: false
    only_filter_missing: false
    show_unmanaged: true
    show_filtered: false
    show_options: false
    show_missing: true
    show_missing_assets: true
    save_missing: true
    tvdb_language: eng
    ignore_ids:
    ignore_imdb_ids:
    playlist_sync_to_user: all
    verify_ssl: true
    webhooks: # If you do not use webhooks remove this from the config
      error: notifiarr
      run_start: notifiarr
      run_end: notifiarr
      changes: notifiarr
    plex: # Can be individually specified per library as well; REQUIRED for the script to run
      url: http://192.168.1.60:32400/
      token: yfEGgg6X9dYwscu-byqd
      timeout: 60
      clean_bundles: false
      empty_trash: false
      optimize: false
    tmdb: # REQUIRED for the script to run - to get a key you must follow https://developers.themoviedb.org/3/getting-started/introduction
      apikey: 040b0282bdc5e462d429eba79c8e42de
      language: en
    tautulli: # Can be individually specified per library as well
      url: http://192.168.1.109:8181/
      apikey: #####################
    omdb:
      apikey: #####################
    notifiarr: # If you do not use webhooks remove this from the config
      apikey: #####################
    anidb: # Not required for AniDB builders unless you want mature content
      username: 
      password: ########
    radarr: # Can be individually specified per library as well - set up by following https://github.com/meisnate12/Plex-Meta-Manager/wiki/Radarr-Attributes
      url: http://192.168.1.2:7878/
      token: #####################
      add_missing: ture
      add_existing: false
      root_folder_path: /media/movies
      monitor: true
      availability: released
      quality_profile: 1080p
      tag:
      search: true
      radarr_path:
      plex_path:
    sonarr: # Can be individually specified per library as well - set up by following https://github.com/meisnate12/Plex-Meta-Manager/wiki/Sonarr-Attributes
      url: http://192.168.1.2:8989
      token: #####################
      version: v3
      add: false
      add_existing: false
      root_folder_path: /media/tv
      monitor: all
      quality_profile: 1080p
      language_profile: English
      series_type: standard
      season_folder: true
      tag:
      search: false
      cutoff_search: false
    trakt: # needed for both the movies and tv shows yml configs - set up by following https://github.com/meisnate12/Plex-Meta-Manager/wiki/Trakt-Attributes
      client_id: #####################
      client_secret: #####################
      authorization:
        access_token: 
        token_type: 
        expires_in: 
        refresh_token: 
        scope: public
        created_at: 
    mal: # Only needed if you have a anime library - set up by following https://github.com/meisnate12/Plex-Meta-Manager/wiki/MyAnimeList-Attributes
      client_id: 
      client_secret: 
      authorization:
        access_token: 
        token_type: 
        expires_in: 
        refresh_token: 
  
  networks.yaml: |-
    templates:
      network:
        optional:
          - network
        tmdb_network: <<network>>
        sort_title: +2_<<collection_name>>
        sync_mode: sync
        smart_label: episode_added.desc
      collections:
        HBO:
          template: { name: network, network: "49, 2593, 3186, 3308" }
        Cinemax:
          template: { name: network, network: 359 }
        Showtime:
          template: { name: network, network: 67 }
        Netflix:
          template: { name: network, network: 213 }
        Hulu:
          template: { name: network, network: 453 }
        Syfy:
          template: { name: network, network: "77, 3701" }
        Starz:
          template: { name: network, network: "318, 758, 4906" }
        HGTV:
          template: { name: network, network: 210 }
        TBS:
          template: { name: network, network: "68, 160, 4888" }
        National Geographic:
          template: { name: network, network: "43, 799, 1756, 1825, 3355, 4293, 4476" }
        Prime Video:
          template: { name: network, network: 1024 }
        YouTube:
          template: { name: network, network: "247, 1436, 4869" }
        FX:
          template: { name: network, network: 88 }
        Disney+:
          template: { name: network, network: "2739, 2919" }
        Apple+:
          template: { name: network, network: 2552 }
        Discovery:
          template: { name: network, network: "10, 22, 64, 106, 244, 626, 670, 1079, 1287, 1534, 2087, 2480, 2692, 3045, 3591, 3900, 3953, 4440, 4462, 4741" }
        A&E:
          template: { name: network, network: "129, 2639, 3688" }

  moviecharts.yaml: |-
    ######################################################
    #                Chart Collections                   #
    ######################################################
    templates:
      Chart:
        sort_title: +1_<<num>><<collection_name>>
        sync_mode: sync
        smart_label: random
      Best of:
        trakt_list: https://trakt.tv/users/lish408/lists/rotten-tomatoes-best-of-<<year>>
        sort_title: +1_Best of <<year>>
        sync_mode: sync
        summary: Rotten Tomatoes Best Movies of <<year>>
        smart_label: audience_rating.desc
    collections:
      Plex Popular:
        template: { name: Chart, num: 1 }
        tautulli_popular:
          list_days: 30
          list_size: 20
          list_buffer: 20
        tautulli_watched:
          list_days: 30
          list_size: 20
          list_buffer: 20
        summary: Movies Popular on Plex
      Trending:
        template: { name: Chart, num: 2 }
        trakt_trending: 10
        tmdb_trending_daily: 10
        tmdb_trending_weekly: 10
        summary: Movies Trending across the internet
      Popular:
        template: { name: Chart, num: 3 }
        tmdb_popular: 40
        imdb_list:
          url: https://www.imdb.com/search/title/?title_type=feature,tv_movie,documentary,short
          limit: 40
        summary: Popular Movies across the internet
      Top Rated:
        template: { name: Chart, num: 4 }
        imdb_list: https://www.imdb.com/search/title/?groups=top_250&count=250/
        tmdb_top_rated: 250
        summary: Top Rated Movies across the internet
      Oscars:
        template: { name: Chart, num: 5 }
        imdb_list: https://www.imdb.com/search/title/?title_type=feature,documentary&groups=oscar_winner
        summary: Oscar Winning Movies
      Best of 2014:
        template: { name: Best of, year: 2014 }
      Best of 2015:
        template: { name: Best of, year: 2015 }
      Best of 2016:
        template: { name: Best of, year: 2016 }
      Best of 2017:
        template: { name: Best of, year: 2017 }
      Best of 2018:
        template: { name: Best of, year: 2018 }
      Best of 2019:
        template: { name: Best of, year: 2019 }
      Best of 2020:
        template: { name: Best of, year: 2020 }
      Best of 2021:
        template: { name: Best of, year: 2021 }
 
  holidays.yml: |-
    ######################################################
    #                Holiday Collections                 #
    ######################################################
    templates:
      Holiday:
        smart_label: title.asc
        summary: |-
          A timed collection of <<collection_name>> and other movies that may relate to the holiday.
          
          NOTE: this collection will only be around until <<end_date>>.
        sort_title: +0_<<collection_name>>
        schedule: range(<<start_date>>-<<end_date>>)
        delete_not_scheduled: true
        visible_home: true
        visible_shared: true
    collections:
      Valentine's Day Movies:
        template:
          name: Holiday
          start_date: 02/01
          end_date: 02/29
        imdb_list:
          - https://www.imdb.com/list/ls000094398/
          - https://www.imdb.com/list/ls057783436/
          - https://www.imdb.com/list/ls064427905/
      St. Patrick's Day Movies:
        template:
          name: Holiday
          start_date: 03/01
          end_date: 03/18
        imdb_list: https://www.imdb.com/list/ls063934595/
      Thanksgiving Movies:
        template:
          name: Holiday
          start_date: 11/01
          end_date: 11/30
        imdb_list: 
          - https://www.imdb.com/list/ls000835734/
          - https://www.imdb.com/list/ls091597850/
      Halloween Movies:
        template: 
          name: Holiday
          start_date: 10/01
          end_date: 10/31
        imdb_list:
          - https://www.imdb.com/list/ls023118929/
          - https://www.imdb.com/list/ls000099714/
        tmdb_collection:
          - 91361    # Halloween Collection
          - 8581     # A Nightmare on Elm Street Collection
          - 1733     # The Mummy Collection
          - 8091     # Alien Collection
        tmdb_movie:
          - 23437    # A Nightmare on Elm Street (2010)
      Christmas Movies:
        template:
          name: Holiday
          start_date: 12/01
          end_date: 12/31
        imdb_list: https://www.imdb.com/list/ls000096828/
      New Year's Day Movies:
        template:
          name: Holiday
          start_date: 12/26
          end_date: 01/04
        imdb_list: https://www.imdb.com/list/ls066838460/
    