apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pool-ui-config-pvc
  namespace: pool
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
    volume.kubernetes.io/selected-node: nuc02
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1000Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pool-ui
  name: pool-ui
  namespace: pool
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: pool-ui
  template:
    metadata:
      labels:
        app: pool-ui
    spec:
      dnsConfig:
        nameservers:
          - 1.1.1.1
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - nuc02
      containers:
      - image: n8marshall/nodejs-poolcontroller-dashpanel:1649179228
        name: pool-ui
        # command: ["tail", "-f", "/dev/null"]
        ports:
        - containerPort: 5150
        resources:
          requests:
            cpu: "500m"
            memory: "50Mi"      
          limits:
            cpu: "1000m"
            memory: "1000Mi"  
        # volumeMounts:
        # - mountPath: /app/config.json
        #   name: pool-ui-configjson
        #   subPath: config.json
      hostname: pool-ui
      restartPolicy: Always
      # volumes:
      # - name: pool-ui-configjson
      #   configMap:
      #     name: pool-ui-configjson
---
apiVersion: v1
kind: Service
metadata:
  name: pool-ui
  namespace: pool
spec:
  loadBalancerIP: 192.168.1.190
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    targetPort: 5150
  selector:
    app: pool-ui
